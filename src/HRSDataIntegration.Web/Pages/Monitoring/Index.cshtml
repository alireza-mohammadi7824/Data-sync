@page
@model HRSDataIntegration.Web.Pages.Monitoring.IndexModel
@using HRSDataIntegration.Web.Menus
@using System.Linq
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Microsoft.AspNetCore.Mvc.Localization
@using HRSDataIntegration.Localization
@inject IPageLayout PageLayout
@inject IHtmlLocalizer<HRSDataIntegrationResource> L
@{
    ViewBag.PageTitle = L["Monitoring:Title"];
    PageLayout.Content.MenuItemName = HRSDataIntegrationMenus.Monitoring;
    var lastUpdatedText = Model.Summary.GeneratedAt != default
        ? L["Monitoring:LastUpdated", Model.Summary.GeneratedAt.ToLocalTime().ToString("g")]
        : L["Monitoring:NeverUpdated"];
}

@section styles {
    <abp-style src="/Pages/Monitoring/Index.css" />
}

<div class="monitoring-dashboard container-fluid px-0">
    <div class="card shadow-sm mb-4">
        <div class="card-body d-flex flex-column flex-md-row align-items-md-center justify-content-between gap-3">
            <div>
                <div class="text-muted text-uppercase fw-semibold small">@L["Monitoring:SummaryTotalServices"]</div>
                <div class="display-6 fw-bold">@Model.Summary.TotalServices</div>
                <div class="text-muted">@L["Monitoring:SummaryActiveServices", Model.Summary.ActiveServices]</div>
            </div>
            <div class="text-muted">@lastUpdatedText</div>
        </div>
    </div>

    @if (!Model.Services.Any())
    {
        <div class="card shadow-sm">
            <div class="card-body text-center py-5">
                <h5 class="fw-semibold mb-3">@L["Monitoring:NoServicesTitle"]</h5>
                <p class="text-muted mb-4">@L["Monitoring:NoServicesDescription"]</p>
                <a class="btn btn-primary" href='@Url.Content("~/Monitoring/Services/Create")'>
                    @L["Monitoring:CreateService"]
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row g-3">
            @foreach (var service in Model.Services)
            {
                <div class="col-12 col-md-6 col-xl-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column gap-2">
                            <div class="d-flex align-items-center justify-content-between">
                                <h5 class="mb-0">@service.Name</h5>
                                @if (service.IsActive)
                                {
                                    <span class="badge bg-success-subtle text-success">@L["Monitoring:ServiceActive"]</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary-subtle text-secondary">@L["Monitoring:ServiceInactive"]</span>
                                }
                            </div>
                            @if (!string.IsNullOrWhiteSpace(service.Description))
                            {
                                <p class="text-muted mb-0">@service.Description</p>
                            }
                            <div class="text-muted small mt-auto">
                                @if (service.LastCheckTime.HasValue)
                                {
                                    @L["Monitoring:ServiceLastCheck", service.LastCheckTime.Value.ToLocalTime().ToString("g")]
                                }
                                else
                                {
                                    @L["Monitoring:ServiceNeverChecked"]
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
